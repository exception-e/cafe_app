DROP TABLE user_roles IF EXISTS;
drop table VOTING_PROCESS if exists;
DROP TABLE users IF EXISTS;
drop table lunches if exists;
drop table VOTINGS if exists ;




DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  email            VARCHAR(255)            NOT NULL,
  password         VARCHAR(255)            NOT NULL,
  enabled          BOOLEAN DEFAULT TRUE    NOT NULL,

  constraint users_unique_email unique (email)
);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),

  CONSTRAINT users_roles UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);

create table VOTINGS
(
  id              INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  voting_date     date,

  constraint date_of_voting unique (voting_date)
);

CREATE TABLE lunches
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)         NOT NULL,
  menu             VARCHAR(255),
  voting_id        INTEGER              NOT NULL,

  foreign key (voting_id) references VOTINGS(id)
);

create table voting_process
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  voting_id     integer                  NOT NULL ,
  user_id       integer                  NOT NULL ,
  lunch_id      integer,

  constraint users_vote unique (voting_id, user_id),
  foreign key (voting_id) references VOTINGS (id),
  foreign key (user_id) references users (id) on delete cascade ,
  foreign key (lunch_id) references lunches (id)
);

